---
AWSTemplateFormatVersion: 2010-09-09

Description: >-
  Deploy files from CodeCommit repo to ECS Fargate instance(s). Standard
  in-place deployment

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: Stack Parameters
        Parameters:
          - ParentStack
      - Label:
          default: Pipeline Parameters
        Parameters:
          - CicdResourceName
          - RestartExecutionOnUpdate
          - ArtifactStoreLocation
          - ArtifactStoreEncryptionKeyId
          - ExecutionTrigger
      - Label:
          default: Source Parameters
        Parameters:
          - RepositoryName
          - BranchName
      - Label:
          default: Build Parameters
        Parameters:
          - BuildProjectDescription
          - BuildSpec
          - ComputeType
          - Image
          - QueuedTimeoutInMinutes
          - TimeoutInMinutes
          - BuildEnvironmentVariables
      - Label:
          default: Build Security Parameters
        Parameters:
          - BuildEncryptionKey
          - Visibility
      - Label:
          default: Build CloudWatch Logging Parameters
        Parameters:
          - EnableBuildCloudWatchLogs
          - BuildCloudWatchGroupName
          - BuildCloudWatchStreamName
      - Label:
          default: Build S3 Logging Parameters
        Parameters:
          - EnableBuildS3Logs
          - BuildS3LogLocation
          - BuildS3EncryptionDisabled
      - Label:
          default: Build Service Access Parameters
        Parameters:
          - ECRRepository
          - SecretArns
          - RDSInstance
          - LambdaFunction
      - Label:
          default: Build Network Parameters
        Parameters:
          - EnableBuildVpcAccess
          - BuildVpcId
          - BuildSubnets
          - BuildSecurityGroupIds
      - Label:
          default: Deployment Parameters
        Parameters:
          - FileName
          - DeploymentTimeout
          - ManualApprovalRequired
      ### Service ##############################################################
      - Label:
          default: Service Parameters
        Parameters:
          - Cluster
          - ServiceName
          - ContainerName
          - TaskDefinition
          - DesiredCount
          - EnableExecuteCommand
          - HealthCheckGracePeriodSeconds
          - PlatformVersion
          - PropagateTags
      - Label:
          default: Service Capacity Provider Strategy Parameters
        Parameters:
          - UseCapacityProviderStrategy
          - FargateCapacityProviderBase
          - FargateCapacityProviderWeight
          - FargateSpotCapacityProviderBase
          - FargateSpotCapacityProviderWeight
      - Label:
          default: Service Deployment Configuration Parameters
        Parameters:
          - UseDeploymentCircuitBreaker
          - EnableRollbacks
      - Label:
          default: Service Load Balancer Parameters
        Parameters:
          - TargetGroupArn
      - Label:
          default: Service Network Parameters
        Parameters:
          - ContainerPort
          - AssignPublicIp
          - SecurityGroups
          - Subnets

Parameters:
  ParentStack:
    Type: String
    Description: (optional) If this stack is nested; name of the parent stack
    Default: ""

  ### Pipeline Params ##########################################################

  CicdResourceName:
    Type: String
    Description: >-
      Name used for pipeline, build project, deployment group. Naming all these
      resources the same makes it easier to find related resources

  RestartExecutionOnUpdate:
    Type: String
    Description: >-
      Indicates whether to rerun the CodePipeline pipeline after you update it
    Default: false
    AllowedValues:
      - true
      - false

  ArtifactStoreLocation:
    Type: String
    Description: >-
      The S3 bucket used for storing the artifacts for a pipeline. You can
      specify the name of an S3 bucket but not a folder in the bucket. A folder
      to contain the pipeline artifacts is created for you based on the name of
      the pipeline. You can use any S3 bucket in the same AWS Region as the
      pipeline to store your pipeline artifacts

  ArtifactStoreEncryptionKeyId:
    Type: String
    Description: >-
      The ID used to identify the key. For an AWS KMS key, you can use the key
      ID, the key ARN, or the alias ARN

  ExecutionTrigger:
    Type: String
    Description: >-
      The ID used to identify the key. For an AWS KMS key, you can use the key
      ID, the key ARN, or the alias ARN
    Default: manual
    AllowedValues:
      - manual
      - polling
      - on-commit

  ### Source Params ############################################################

  RepositoryName:
    Type: String
    Description: >-
      Name of the CodeCommit repo to source from

  BranchName:
    Type: String
    Description: >-
      Name of the branch in the repo to source from

  ### Build Params #############################################################

  BuildProjectDescription:
    Type: String
    Description: >-
      (optional) A description that makes the build project easy to identify
    Default: ""

  BuildSpec:
    Type: String
    Description: >-
      (optional) The build specification for the project. If this value is not
      provided, then the source code must contain a buildspec file named
      buildspec.yml at the root level. If this value is provided, it is the path
      to an alternate buildspec file relative to the value of the built-in
      environment variable CODEBUILD_SRC_DIR. The alternate buildspec file can
      have a name other than buildspec.yml, for example myspec.yml or
      build_spec_qa.yml or similar
    Default: ""


  ComputeType:
    Type: String
    Description: The type of compute environment
    Default: BUILD_GENERAL1_SMALL
    AllowedValues:
      - BUILD_GENERAL1_SMALL
      - BUILD_GENERAL1_MEDIUM
      - BUILD_GENERAL1_LARGE

  Image:
    Type: String
    Description: >-
      The image tag or image digest that identifies the Docker image to use for
      this build project. Use the following formats. For an image tag:
        <registry>/<repository>:<tag>. For example, in the Docker repository
        that CodeBuild uses to manage its Docker images, this would be
        aws/codebuild/standard:4.0. For an image digest:
        <registry>/<repository>@<digest>. For example, to specify an image with
        the digest "sha256:cbbf2f9a99b47fc460d422812b6a5adff7dfee951d8fa2e4a98caa0382cfbdbf,"
        use <registry>/<repository>@sha256:cbbf2f9a99b47fc460d422812b6a5adff7dfee951d8fa2e4a98caa0382cfbdbf.
        For a list of Docker images provided by CodeBuild see:
          https://docs.aws.amazon.com/codebuild/latest/userguide/build-env-ref-available.html
    Default: aws/codebuild/amazonlinux2-x86_64-standard:3.0

  QueuedTimeoutInMinutes:
    Type: Number
    Description: >-
      The number of minutes a build is allowed to be queued before it times out
    Default: 30
    MinValue: 5
    MaxValue: 480

  TimeoutInMinutes:
    Type: Number
    Description: >-
      How long, in minutes, from 5 to 480 (8 hours), for AWS CodeBuild to wait
      before timing out any related build that did not get marked as completed
    Default: 60
    MinValue: 5
    MaxValue: 480

  BuildEnvironmentVariables:
    Type: String
    Description: >-
      (optional) Environment variable to use in CodeBuild. Specified as a JSON
      array of object, with each object specifying a name, value, and type. e.g:
      [{"name":"FOOBAR","value":"123","type":"PLAINTEXT"},{"name":"QUUBAR","value":"abc","type":"PLAINTEXT"}]
      Here 'name' is the environment variable name, 'value' is the value of the
      environment variable, and 'type' is the type of the environment variable
      which can either be: PARAMETER_STORE, SECRETS_MANAGER, or PLAINTEXT. NOTE:
      When using the PARAMETER_STORE or SECRETS_MANAGER type, the VALUE must be
      the name of a parameter you have already stored in AWS Systems Manager
      Parameter Store or a secret you have already stored in AWS Secrets Manager
      respectively
    Default: ""

  BuildEncryptionKey:
    Type: String
    Description: >-
      (optional) The AWS Key Management Service customer master key (CMK) to be
      used for encrypting the build output artifacts. You can specify either the
      Amazon Resource Name (ARN) of the CMK or, if available, the CMK's alias
      (using the format alias/<alias-name>). If you don't specify a value,
      CodeBuild uses the managed CMK for Amazon Simple Storage Service (Amazon
      S3)
    Default: ""

  Visibility:
    Type: String
    Description: Specifies the visibility of the project's builds
    Default: PRIVATE
    AllowedValues:
      - PUBLIC_READ
      - PRIVATE

  EnableBuildCloudWatchLogs:
    Type: String
    Description: Enables cloud watch logging
    Default: false
    AllowedValues:
      - true
      - false

  BuildCloudWatchGroupName:
    Type: String
    Description: >-
      (optional) The group name of the logs in CloudWatch Logs, e.g. /aws/aaa or
      /foo/bar
    Default: ""

  BuildCloudWatchStreamName:
    Type: String
    Description: (optional) The prefix of the stream name of the CloudWatch Logs
    Default: ""

  EnableBuildS3Logs:
    Type: String
    Description: Enables S3 logging
    Default: false
    AllowedValues:
      - true
      - false

  BuildS3LogLocation:
    Type: String
    Description: >-
      (optional) The ARN of an S3 bucket and the path prefix for S3 logs. If
      your Amazon S3 bucket name is my-bucket, and your path prefix is
      build-log, then acceptable formats are my-bucket/build-log or
      arn:aws:s3:::my-bucket/build-log
    Default: ""

  BuildS3EncryptionDisabled:
    Type: String
    Description: >-
      (optional) Set to true if you do not want your S3 build log output
      encrypted. By default S3 build logs are encrypted
    Default: false
    AllowedValues:
      - true
      - false

  ECRRepository:
    Type: String
    Description: >-
      Allow access to ECR repository so CodeBuild can pull and push

  SecretArns:
    Type: CommaDelimitedList
    Description: >-
      (optional) Allow access to Secrets Manager secret from the CodeBuild
      project
    Default: ",,,,"

  RDSInstance:
    Type: String
    Description: >-
      (optional) Allow access to RDS instance from the CodeBuild project
    Default: ""

  LambdaFunction:
    Type: String
    Description: >-
      (optional) Allow full access to Lambda function from the CodeBuild project
    Default: ""

  EnableBuildVpcAccess:
    Type: String
    Description: Allow access to VPC so CodeBuild can access resource in the VPC
    Default: false
    AllowedValues:
      - true
      - false

  BuildVpcId:
    Type: String
    Description: The ID of the Amazon VPC
    Default: ""

  BuildSubnets:
    Type: CommaDelimitedList
    Description: >-
      (optional) A list of one or more subnet IDs in your Amazon VPC. The
      maximum count is 16
    Default: ",,"

  BuildSecurityGroupIds:
    Type: CommaDelimitedList
    Description: >-
      (optional) A list of one or more security groups IDs in your Amazon VPC.
      The maximum count is 5
    Default: ",,"

  ### Deploy Params ############################################################

  FileName:
    Type: String
    Description: >-
      The name of your image definitions file, the JSON file that describes your
      service's container name and the image and tag. You use this file for ECS
      standard deployments
    Default: "imagedefinitions.json"

  DeploymentTimeout:
    Type: String
    Description: The Amazon ECS deployment action timeout in minutes
    Default: "15"

  ManualApprovalRequired:
    Type: String
    Description: >-
      Indicates whether manual approval is required before deployment
    Default: false
    AllowedValues:
      - true
      - false

  ### Fargate Service Params ###################################################

  Cluster:
    Type: String
    Description: >-
      Name of the ECS Cluster stack we want to place our service on
    Default: ""

  ServiceName:
    Type: String
    Description: >-
      Up to 255 letters (uppercase and lowercase), numbers, underscores, and
      hyphens are allowed. Service names must be unique within a cluster, but
      you can have similarly named services in multiple clusters within a Region
      or across multiple Regions

  ContainerName:
    Type: String
    Description: >-
      The name of the container (as it appears in a container definition) to
      associate with the load balancer

  TaskDefinition:
    Type: String
    Description: >-
      The family and revision (family:revision) or full ARN of the task
      definition to run in your service. The revision is required in order for
      the resource to stabilize

  DesiredCount:
    Type: Number
    Description: >-
      The number of instantiations of the specified task definition to place and
      keep running on your cluster
    Default: 1
    MinValue: 1
    MaxValue: 10000

  EnableExecuteCommand:
    Type: String
    Default: false
    Description: >-
      Whether or not the execute command functionality is enabled for the
      service. If 'yes', the execute command functionality is enabled for all
      containers in tasks as part of the service
    AllowedValues:
      - true
      - false

  HealthCheckGracePeriodSeconds:
    Type: Number
    Description: >-
      The period of time, in seconds, that the Amazon ECS service scheduler
      should ignore unhealthy Elastic Load Balancing target health checks after
      a task has first started. This grace period can prevent the service
      scheduler from marking tasks as unhealthy and stopping them before they
      have time to come up. NOTE: specify 0 if you don't want a grace period
    Default: 30
    MinValue: 0
    MaxValue: 2147483647

  PlatformVersion:
    Type: String
    Default: "1.4.0"
    Description: >-
      The platform version that your tasks in the service are running on
    AllowedValues:
      - "LATEST"
      - "1.4.0"

  PropagateTags:
    Type: String
    Default: NONE
    Description: >-
      Specifies whether to propagate the tags from the task definition or the
      service to the tasks in the service. If no value is specified, the tags
      are not propagated. Tags can only be propagated to the tasks within the
      service during service creation
    AllowedValues:
      - NONE
      - SERVICE
      - TASK_DEFINITION

  # Capacity Provider Strategy

  UseCapacityProviderStrategy:
    Type: String
    Default: "no"
    Description: Whether or not to use a Capacity Provider Strategy
    AllowedValues:
      - "yes"
      - "no"

  FargateCapacityProviderBase:
    Type: Number
    Description: >-
      Capacity base for Fargate strategy. The base value designates how many
      tasks, at a minimum, to run on the specified capacity provider. Only one
      capacity provider in a capacity provider strategy can have a base defined.
      If no value is specified, the default value of 0 is used
    Default: 0
    MinValue: 0
    MaxValue: 100000

  FargateCapacityProviderWeight:
    Type: Number
    Description: >-
      Capacity weight for Fargate strategy. The weight value designates the
      relative percentage of the total number of tasks launched that should use
      the specified capacity provider. The weight value is taken into
      consideration after the base value, if defined, is satisfied
    Default: 0
    MinValue: 0
    MaxValue: 1000

  FargateSpotCapacityProviderBase:
    Type: Number
    Description: >-
      Same as FargateCapacityProviderBase, but for Fargate Spot strategy
    Default: 0
    MinValue: 0
    MaxValue: 100000

  FargateSpotCapacityProviderWeight:
    Type: Number
    Description: >-
      Same as FargateCapacityProviderWeight, but for Fargate Spot strategy
    Default: 0
    MinValue: 0
    MaxValue: 1000

  # Deployment Configuration

  UseDeploymentCircuitBreaker:
    Type: String
    Default: "yes"
    Description: >-
      Whether to enable the deployment circuit breaker logic for the service
    AllowedValues:
      - "yes"
      - "no"

  EnableRollbacks:
    Type: String
    Default: true
    Description: >-
      Whether to enable Amazon ECS to roll back the service if a service
      deployment fails. If rollback is enabled, when a service deployment fails,
      the service is rolled back to the last deployment that completed
      successfully
    AllowedValues:
      - true
      - false

  # Load Balancer

  TargetGroupArn:
    Type: String
    Description: >-
      The full Amazon Resource Name (ARN) of the Elastic Load Balancing target
      group or groups associated with a service or task set

  # Network

  ContainerPort:
    Type: Number
    Description: >-
      The port on the container to associate with the load balancer. This port
      must correspond to a containerPort in the task definition the tasks in the
      service are using

  AssignPublicIp:
    Type: String
    Default: DISABLED
    Description: >-
      Whether the task's elastic network interface receives a public IP address
    AllowedValues:
      - ENABLED
      - DISABLED

  SecurityGroups:
    Type: List<AWS::EC2::SecurityGroup::Id>
    Description: >-
      The security groups associated with the task or service. If you do not
      specify a security group, the default security group for the VPC is used.
      There is a limit of 5 security groups

  Subnets:
    Type: List<AWS::EC2::Subnet::Id>
    Description: >-
      The subnets associated with the task or service. There is a limit of 16
      subnets

Conditions:
  SpecifyParentStack: !Not [!Equals [!Ref ParentStack, ""]]
  SpecifyOnCommitExecutionTrigger: !Equals [!Ref ExecutionTrigger, "on-commit"]

Resources:
  serviceStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: "https://$__BUCKET_NAME__.s3.eu-west-2.amazonaws.com/$__BUCKET_FOLDER__/ecs/service/fargate/service.yml"
      Parameters:
        ParentStack: !Ref "AWS::StackName"
        Cluster: !Ref Cluster
        ServiceName: !Ref ServiceName
        ContainerName: !Ref ContainerName
        TaskDefinition: !Ref TaskDefinition
        DesiredCount: !Ref DesiredCount
        EnableExecuteCommand: !Ref EnableExecuteCommand
        HealthCheckGracePeriodSeconds: !Ref HealthCheckGracePeriodSeconds
        PlatformVersion: !Ref PlatformVersion
        PropagateTags: !Ref PropagateTags
        UseCapacityProviderStrategy: !Ref UseCapacityProviderStrategy
        FargateCapacityProviderBase: !Ref FargateCapacityProviderBase
        FargateCapacityProviderWeight: !Ref FargateCapacityProviderWeight
        FargateSpotCapacityProviderBase: !Ref FargateSpotCapacityProviderBase
        FargateSpotCapacityProviderWeight: !Ref FargateSpotCapacityProviderWeight
        UseDeploymentCircuitBreaker: !Ref UseDeploymentCircuitBreaker
        EnableRollbacks: !Ref EnableRollbacks
        TargetGroupArn: !Ref TargetGroupArn
        ContainerPort: !Ref ContainerPort
        AssignPublicIp: !Ref AssignPublicIp
        SecurityGroups: !Join [',', !Ref SecurityGroups]
        Subnets: !Join [',', !Ref Subnets]

  buildProjectStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: "https://$__BUCKET_NAME__.s3.eu-west-2.amazonaws.com/$__BUCKET_FOLDER__/delivery/build/_build-project.yml"
      Parameters:
        ParentStack: !Ref "AWS::StackName"
        Name: !Ref CicdResourceName
        Description: !Ref BuildProjectDescription
        ArtifactStoreLocation: !Ref ArtifactStoreLocation
        BuildSpec: !Ref BuildSpec
        ComputeType: !Ref ComputeType
        Image: !Ref Image
        QueuedTimeoutInMinutes: !Ref QueuedTimeoutInMinutes
        TimeoutInMinutes: !Ref TimeoutInMinutes
        EncryptionKey: !Ref BuildEncryptionKey
        Visibility: !Ref Visibility
        EnableCloudWatchLogs: !Ref EnableBuildCloudWatchLogs
        GroupName: !Ref BuildCloudWatchGroupName
        StreamName: !Ref BuildCloudWatchStreamName
        EnableS3Logs: !Ref EnableBuildS3Logs
        Location: !Ref BuildS3LogLocation
        EncryptionDisabled: !Ref BuildS3EncryptionDisabled
        ECRRepository: !Ref ECRRepository
        SecretArns: !Join [',', !Ref SecretArns]
        RDSInstance: !Ref RDSInstance
        LambdaFunction: !Ref LambdaFunction
        EnableVpcAccess: !Ref EnableBuildVpcAccess
        VpcId: !Ref BuildVpcId
        Subnets: !Join [',', !Ref BuildSubnets]
        SecurityGroupIds: !Join [',', !Ref BuildSecurityGroupIds]

  pipelineStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: "https://$__BUCKET_NAME__.s3.eu-west-2.amazonaws.com/$__BUCKET_FOLDER__/delivery/pipeline/_code-commit-to-ecs.yml"
      Parameters:
        ParentStack: !Ref "AWS::StackName"
        Name: !Ref CicdResourceName
        RestartExecutionOnUpdate: !Ref RestartExecutionOnUpdate
        ArtifactStoreLocation: !Ref ArtifactStoreLocation
        ArtifactStoreEncryptionKeyId: !Ref ArtifactStoreEncryptionKeyId
        ExecutionTrigger: !Ref ExecutionTrigger
        RepositoryName: !Ref RepositoryName
        BranchName: !Ref BranchName
        BuildProjectName: !GetAtt buildProjectStack.Outputs.projectName
        BuildEnvironmentVariables: !Ref BuildEnvironmentVariables
        ClusterName: !Ref Cluster
        ServiceName: !Ref ServiceName
        FileName: !Ref FileName
        DeploymentTimeout: !Ref DeploymentTimeout
        ManualApprovalRequired: !Ref ManualApprovalRequired

  pipelineExecOnCommitEventStack:
    Condition: SpecifyOnCommitExecutionTrigger
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: "https://$__BUCKET_NAME__.s3.eu-west-2.amazonaws.com/$__BUCKET_FOLDER__/delivery/trigger/_exec-on-code-commit-branch-change.yml"
      Parameters:
        ParentStack: !Ref "AWS::StackName"
        PipelineName: !Ref CicdResourceName
        RepositoryName: !Ref RepositoryName
        BranchName: !Ref BranchName
